{ pkgs, inputs, ... }:
{
  # Set your home directory state version
  home.stateVersion = "25.05";
  # Let Home Manager manage itself
  programs.home-manager.enable = true;

  # Enable zsh and ensure it's the default shell
  programs.zsh.enable = true;
  # Your user-level packages are now managed here!
  home.packages = with pkgs; [
    # Applications
#    inputs.claude-desktop.packages.${pkgs.system}.claude-desktop-with-fhs
    appimage-run
    act
    bazecor
    transmission_4
    google-chrome
    warp-terminal
    cloudflare-warp
    telegram-desktop
    obs-studio
    beeper
    signal-desktop
    deno
    librewolf
    # Development tools
    cargo
    claude-code
    gh
    go
    gopass
    gopass-summon-provider # Added for summon integration
    python313Packages.pip
    python313
    pipx
    playwright
    nix-direnv
#    nodePackages.nuxt
#    nodePackages.tdd-guard
    jq
    jujutsu
    uv
    gcc
    pkg-config
    gnumake
    #clang
    nodejs
    maven
    ollama
    foundry
    zed-editor
    typst
    gemini-cli # Added to ensure the gemini executable is available for gemini-mcp-tool
    # Claude Desktop
   # (makeDesktopItem {
   # name = "claude-desktop";
   # desktopName = "Claude Desktop";
   # exec = "${inputs.claude-desktop.packages.${pkgs.system}.claude-desktop-with-fhs}/bin/claude-desktop";
   # icon = "claude-desktop"; # or path to icon
   # comment = "AI Assistant";
   # categories = [ "Office" "Utility" ];
  #})
  ];

  home.file.".config/ai/ehmpeecee.json".text = ''
          }{
  "mcpServers": {
       "nixos": {
      "command": "nix",
      "args": ["run", "github:utensils/mcp-nixos", "--"]
    },	  
    "github": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-github"
      ],
      "env": {
        "GITHUB_PERSONAL_ACCESS_TOKEN": "REDACTED_GITHUB_TOKEN"
      }
    },
    "github-cli": {
      "command": "npx",
      "args": [
        "gh-cli-mcp"
      ],
      "env": {},
      "cwd": ".",
      "timeout": 30000,
      "trust": false
    },
    "taskmaster-ai": {
      "command": "npx",
      "args": [
        "-y",
        "--package=task-master-ai",
        "task-master-ai"
      ],
      "env": {
        "ANTHROPIC_API_KEY": "YOUR_ANTHROPIC_API_KEY_HERE",
        "PERPLEXITY_API_KEY": "YOUR_PERPLEXITY_API_KEY_HERE",
        "OPENAI_API_KEY": "YOUR_OPENAI_KEY_HERE",
        "GOOGLE_API_KEY": "REDACTED_GOOGLE_KEY",
        "MISTRAL_API_KEY": "YOUR_MISTRAL_KEY_HERE",
        "OPENROUTER_API_KEY": "REDACTED_OPENROUTER_KEY",
        "XAI_API_KEY": "YOUR_XAI_KEY_HERE",
        "AZURE_OPENAI_API_KEY": "YOUR_AZURE_KEY_HERE",
        "OLLAMA_API_KEY": "YOUR_OLLAMA_API_KEY_HERE"
      }
    },
   "gemini-cli": {
      "command": "npx",
      "args": [
        "-y",
        "gemini-mcp-tool"
      ]
    },
    "Phantom": {
      "command": "npx",
      "args": ["-y", "@aku11i/phantom", "mcp", "serve"],
      "transport": "stdio"
    },
    "jj-mcp-server": {
      "command": "npx",
      "args": [
        "-y",
        "jj-mcp-server"
      ]
    },
    "mcpServers": {
      "mcpAgentProxy": {
        "command": "npx",
        "args": ["mcp-agent-proxy"],
        "env": {
        "AGENT_SERVERS": "http://localhost:4111 http://localhost:4222"
      }
    },
    "git-mob": {
       "command": "npx",
       "args": ["-y", "git-mob-mcp-server"]
      }
    }
  }'';

  # Distrobox configuration ðŸ“¦
  home.sessionVariables = {
    SUMMON_PROVIDER_PATH = "${pkgs.gopass-summon-provider}/bin";
  };

#  home.file.".zshrc".text = ''
#    # This file is managed by Home Manager.
#    # Do not edit directly.
#
#    # Source Home Manager environment variables
#    if [ -e "$HOME/.nix-profile/etc/profile" ]; then
#      . "$HOME/.nix-profile/etc/profile"
#   fi
#
#    export SUMMON_PROVIDER=gopass 
#
#  '';

  programs.distrobox = {
    enable = true;
    containers = {
      "python-project" = {
        image = "fedora:40";
        additional_packages = "python3 git";
        init_hooks = "pip3 install numpy pandas torch torchvision";
      };
      "common-debian" = {
        image = "debian:13";
        entry = true;
        additional_packages = "git";
        init_hooks = [
          "ln -sf /usr/bin/distrobox-host-exec /usr/local/bin/docker"
          "ln -sf /usr/bin/distrobox-host-exec /usr/local/bin/docker-compose"
        ];
      };
      "office" = {
        clone = "common-debian";
        additional_packages = "libreoffice onlyoffice";
        entry = true;
      };
    };
  };
}
